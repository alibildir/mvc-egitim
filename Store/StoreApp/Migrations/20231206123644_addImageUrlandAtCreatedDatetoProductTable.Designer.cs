// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace StoreApp.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231206123644_addImageUrlandAtCreatedDatetoProductTable")]
    partial class addImageUrlandAtCreatedDatetoProductTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Bilgisayar"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Elektronik"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Telefonlar"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Televizyonlar"
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2023, 12, 6, 15, 37, 44, 639, DateTimeKind.Local).AddTicks(8667));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("/images/default.jpg");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AtCreatedDate = new DateTime(2023, 12, 6, 15, 37, 44, 639, DateTimeKind.Local).AddTicks(9075),
                            CategoryId = 1,
                            ImageUrl = "/images/default.jpg",
                            Price = 30000m,
                            ProductName = "Computer"
                        },
                        new
                        {
                            ProductId = 2,
                            AtCreatedDate = new DateTime(2023, 12, 6, 15, 37, 44, 639, DateTimeKind.Local).AddTicks(9083),
                            CategoryId = 1,
                            ImageUrl = "/images/default.jpg",
                            Price = 40000m,
                            ProductName = "Phone"
                        },
                        new
                        {
                            ProductId = 3,
                            AtCreatedDate = new DateTime(2023, 12, 6, 15, 37, 44, 639, DateTimeKind.Local).AddTicks(9084),
                            CategoryId = 1,
                            ImageUrl = "/images/default.jpg",
                            Price = 1000m,
                            ProductName = "Mouse"
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.HasOne("Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
